{"version":3,"file":"js/844.e9f45d44.js","mappings":"2LACOA,MAAM,Q,GACJA,MAAM,qC,GAGNA,MAAM,a,GACNA,MAAM,a,0CALbC,EAAAA,EAAAA,IASM,MATNC,EASM,EARJC,EAAAA,EAAAA,IAEM,MAFNC,GAEMC,EAAAA,EAAAA,IADDC,EAAAC,MAAMC,SAAO,IAElBL,EAAAA,EAAAA,IAIM,MAJNM,EAIM,EAHJN,EAAAA,EAAAA,IAEI,IAFJO,GAEIL,EAAAA,EAAAA,IADCC,EAAAC,MAAMI,WAAS,M,cAQ1B,GACEC,KAAM,UACNC,OAAQ,CAACC,EAAAA,GACTC,IAAAA,GACE,MAAO,CACLC,IAAK,kCAAkCC,KAAKC,OAAOC,OAAOC,KAE9D,EAIAC,MAAO,CAAC,MAERC,OAAAA,GACEC,QAAQC,IAAI,WAAYP,KAAKC,OAAOC,OAAOC,IAC3CH,KAAKQ,YAAYR,KAAKD,IACxB,EACAU,iBAAAA,CAAkBC,EAAIC,EAAMC,QAKTC,GAAbH,EAAGR,QAAqBI,QAAQC,IAAI,aAAcP,KAAKc,QAK3Dd,KAAKQ,YAAY,kCAAkCR,KAAKG,MAExDS,GACF,G,UCxCF,MAAMG,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,KAEpE,O","sources":["webpack://empresa/./src/components/servicos/Servico.vue","webpack://empresa/./src/components/servicos/Servico.vue?86f2"],"sourcesContent":["<template>\r\n  <div class=\"card\">\r\n    <div class=\"card-header bg-primary text-white\">\r\n      {{ dados.servico }}\r\n    </div>\r\n    <div class=\"card-body\">\r\n      <p class=\"card-text\">\r\n        {{ dados.descricao }}\r\n      </p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport ApiMixins from \"@/mixins/apiMixins\";\r\nexport default {\r\n  name: \"Servico\",\r\n  mixins: [ApiMixins],\r\n  data() {\r\n    return {\r\n      url: `http://localhost:3000/servicos/${this.$route.params.id}`,\r\n    };\r\n  },\r\n\r\n  //o multiplo de props tem que ter o msm nome do parâmentro dinãmico da path\r\n   \r\n  props: [\"id\"],\r\n\r\n  created() {\r\n    console.log(\"Serviço:\", this.$route.params.id);\r\n    this.getDadosApi(this.url);\r\n  },\r\n  beforeRouteUpdate(to, from, next) {\r\n    //to = $route para onde esta indo\r\n    // from = $route de onde esta vindo\r\n    // next = faz que o fluixo de navegação siga em frente e ele é execultado no final da linha de codigo\r\n\r\n    if (to.params != undefined) console.log(\"Via props:\", this.$props);\r\n\r\n    // this.getDadosApi(`http://localhost:3000/servicos/${to.params.id}`);\r\n\r\n    //usando o props multiplos parametros em presicar usar o $route.params.id\r\n    this.getDadosApi(`http://localhost:3000/servicos/${this.id}`);\r\n\r\n    next();\r\n  },\r\n  // watch comentado para usar o beforeRouteUpdate() no lugar, dando mesmo resultado porém com mais estática.\r\n\r\n  // watch: {\r\n  //   $route(to) {\r\n  //     if (to.params.id != undefined) {\r\n  //       this.getDadosApi(`http://localhost:3000/servicos/${to.params.id}`);\r\n  //     }\r\n  //   },\r\n  // },\r\n};\r\n</script>\r\n\r\n<style></style>\r\n","import { render } from \"./Servico.vue?vue&type=template&id=229913b5\"\nimport script from \"./Servico.vue?vue&type=script&lang=js\"\nexport * from \"./Servico.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_toDisplayString","_ctx","dados","servico","_hoisted_3","_hoisted_4","descricao","name","mixins","ApiMixins","data","url","this","$route","params","id","props","created","console","log","getDadosApi","beforeRouteUpdate","to","from","next","undefined","$props","__exports__","render"],"sourceRoot":""}